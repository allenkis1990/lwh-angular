{"version":3,"sources":["file-version.js"],"names":[],"mappings":"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","file":"file-version-compiled.js","sourcesContent":["\r\nvar fs = require('fs'),\r\n    fileSystem = require('file-system'),\r\n    crypto = require('crypto'),\r\n    gulp = require('gulp'),\r\n    path = require('path'),\r\n    _ = require('lodash');\r\n\r\n////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////\r\nvar fileList = [],\r\n    times = 0,\r\n    directoryMap = {},\r\n    hashChangeFiles = [],\r\n    hashLog = {};\r\n\r\n////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////\r\n\r\nfunction doLastThings(workPlace) {\r\n    var changeFiles = [],\r\n\r\n        some = {},\r\n\r\n        last_ = {};\r\n\r\n    Object.keys(hashLog).forEach(function (log) {\r\n\r\n        hashLog[log].forEach(function (removeItem) {\r\n\r\n            if (fs.existsSync(removeItem.sourcePath)) {\r\n                fs.unlinkSync(removeItem.sourcePath);\r\n            }\r\n\r\n            changeFiles.push(removeItem.hashPath);\r\n\r\n            var outFileName = removeItem.hashPath,\r\n                dire = path.dirname(outFileName),\r\n                itemName = outFileName.split('/'),\r\n                fileName = itemName[itemName.length - 1],\r\n                lastHash = fileName.split('_'),\r\n                lastFileName = lastHash[0] + '_' + lastHash[lastHash.length - 1],\r\n                sufix = lastHash[lastHash.length - 1].split('.')[1];\r\n\r\n            some[dire + '/' + lastHash[0] + '.' + sufix] = {\r\n                hash: lastHash,\r\n                dir: dire,\r\n                holName: outFileName,\r\n                fileName: lastFileName\r\n            };\r\n        })\r\n    });\r\n\r\n    Object.keys(some).forEach(function (item) {\r\n\r\n        var source = some[item],\r\n            hash = source['hash'],\r\n            dir = source['dir'],\r\n            fileName = source['fileName'],\r\n            thePath = dir + '/' + hash.join('_');\r\n\r\n        fs.renameSync(thePath, dir + '/' + fileName);\r\n        last_[thePath] = dir + '/' + fileName;\r\n    });\r\n\r\n    Object.keys(last_).forEach(function (newFile) {\r\n        var ext = path.extname(newFile),\r\n            te = newFile.split('_')[0],\r\n            fileName = te + ext;\r\n\r\n        Object.keys(directoryMap).forEach(function (directory) {\r\n            if (fileName === workPlace + '/' + directory + '/' + fileName.split('/')[fileName.split('/').length - 1]) {\r\n                fs.renameSync(last_[newFile], fileName);\r\n                last_[newFile] = fileName;\r\n            }\r\n        });\r\n    });\r\n\r\n    Object.keys(directoryMap).forEach(function (directory) {\r\n\r\n        var reg = new RegExp('^' + workPlace + '/' + directory);\r\n\r\n        Object.keys(last_).forEach(function (fuck) {\r\n\r\n            if (reg.test(fuck)) {\r\n                var fileContents = fs.readFileSync(last_[fuck]).toString();\r\n                Object.keys(last_).forEach(function (fuckU) {\r\n                    var ext = path.extname(fuckU),\r\n                        fileReg = new RegExp('(.*)\\\\' + ext + '$');\r\n                    var theKey = fuckU\r\n                            .replace(fileReg, '$1')\r\n                            .replace(workPlace + '/' + directory + '/js/', '')\r\n                            .replace(workPlace + '/' + directory + '/', ''),\r\n\r\n                        joinKey = last_[fuckU]\r\n                            .replace(fileReg, '$1')\r\n                            .replace(workPlace + '/' + directory + '/js/', '')\r\n                            .replace(workPlace + '/' + directory + '/', '');\r\n\r\n                    fileContents = fileContents.split(theKey)\r\n                        .join(joinKey);\r\n                });\r\n\r\n                fs.writeFileSync(last_[fuck], fileContents, {encoding: 'UTF-8'});\r\n            }\r\n\r\n        })\r\n    })\r\n}\r\nfunction readFile(outPath) {\r\n\r\n    var theFiles = [];\r\n\r\n    function doRead(path) {\r\n        var fsStat = fs.statSync(path);\r\n        if (fsStat.isDirectory()) {\r\n            var dirs = fs.readdirSync(path);\r\n\r\n            dirs.forEach(function (directory) {\r\n                doRead(path + '/' + directory)\r\n            })\r\n\r\n        } else {\r\n            theFiles.push({\r\n                sourcePath: path,\r\n                buffer: fs.readFileSync(path)\r\n            });\r\n        }\r\n    }\r\n\r\n    doRead(outPath);\r\n\r\n    return theFiles;\r\n}\r\n\r\nfunction resetDirectoryMap(workPlace) {\r\n    var result = {},\r\n        directories = [];\r\n\r\n    getSubDirectory(workPlace).forEach(function (fileOrDirectory) {\r\n        var fileStats = fs.statSync(workPlace + '/' + fileOrDirectory);\r\n        fileStats.isDirectory() && directories.push(fileOrDirectory);\r\n    });\r\n\r\n    directories.forEach(function (directory) {\r\n        result[directory] = {};\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n *执行任务\r\n * @param fileArray\r\n * @param srcPath\r\n * @param destPath\r\n */\r\nfunction rev_replace(fileArray, workPlace) {\r\n    this.workPlace = workPlace;\r\n    this.manifest = {};\r\n    console.log(times + '************************************************************************************************************');\r\n    directoryMap = {};\r\n    var me = this;\r\n\r\n    directoryMap = resetDirectoryMap(workPlace);\r\n\r\n    hashChangeFiles = [];\r\n\r\n    ////////////////////////////////////\r\n    ////////////////////////////////////\r\n    doHash.call(this, fileArray);\r\n    ////////////////////////////////////\r\n    ////////////////////////////////////\r\n\r\n    ////////////////////////////////////\r\n    ////////////////////////////////////\r\n    makeManifestFile.call(this);\r\n    ////////////////////////////////////\r\n    ////////////////////////////////////\r\n\r\n    ////////////////////////////////////\r\n    ////////////////////////////////////\r\n    genDirectoryMap.call(this, null);\r\n    ////////////////////////////////////\r\n    ////////////////////////////////////\r\n\r\n    ////////////////////////////////////\r\n    ////////////////////////////////////\r\n    replaceContent.call(this, fileArray);\r\n    ////////////////////////////////////\r\n    ////////////////////////////////////\r\n\r\n    if (hashChangeFiles.length > 0) {\r\n        hashLog[times] = hashChangeFiles;\r\n        hashChangeFiles.forEach(function (changeFile) {\r\n            changeFile.sourcePath = changeFile.hashPath;\r\n        });\r\n\r\n        times++;\r\n        rev_replace(hashChangeFiles, workPlace);\r\n    }\r\n}\r\n\r\n/**\r\n * hash生成\r\n * @param fileArray\r\n * @param manifest\r\n */\r\nvar hashMap = {};\r\nfunction doHash(fileArray) {\r\n\r\n    var me = this;\r\n\r\n    fileArray.forEach(function (file) {\r\n        // 将源地址保存\r\n        var oldFilePath = file.sourcePath,\r\n\r\n            // 新的地址将指向到构建目录下面\r\n            newFilePath = file.sourcePath;\r\n\r\n        // 如果file对象中不存在buffer 则手动去加载buffer文件流\r\n        if (!file.buffer) {\r\n            file.buffer = fs.readFileSync(file.sourcePath);\r\n        }\r\n\r\n        // 获取文件的后缀名;\r\n        var ext = path.extname(file.sourcePath),\r\n\r\n            // hash整个文件内容, 如果文件内容较上一次有变更则hash将跟上一次的不同\r\n            hash = crypto.createHash('md5')\r\n                .update(file.buffer.toString())\r\n                .digest('hex').slice(0, 10);\r\n\r\n        if (!hashMap[newFilePath]) {\r\n            hashMap[newFilePath] = {\r\n                hashHistory: []\r\n            }\r\n        }\r\n\r\n        hashMap[newFilePath].hashHistory.unshift(hash);\r\n\r\n        // 生成新的文件地址， 使用hash追加\r\n        newFilePath = newFilePath.replace(new RegExp(ext + '$'), '_' + hash + ext);\r\n\r\n        // 保存文件生成的hash目录到hashPath当中供后面使用\r\n        file.hashPath = newFilePath;\r\n\r\n        // 将文件从源来的目录下面拷贝到新的目录下面\r\n        // .copyFileSync ( oldFilePath, newFilePath );\r\n        fs.renameSync(oldFilePath, newFilePath);\r\n\r\n        // 将生成的新的hash地址保存到manifest[旧地址]映射\r\n        me.manifest[oldFilePath] = newFilePath;\r\n    });\r\n}\r\n\r\n/**\r\n * 保存manifest到{destPath}/manifest.json中...\r\n * @returns {*}\r\n */\r\nfunction makeManifestFile() {\r\n    return fs.writeFileSync(this.workPlace + '/manifest.json',\r\n        JSON.stringify(this.manifest), {encoding: 'UTF-8'});\r\n}\r\n\r\n/**\r\n *\r\n * @param manifest\r\n * @returns {*}\r\n */\r\nfunction genDirectoryMap() {\r\n    var me = this;\r\n\r\n    Object.keys(this.manifest).forEach(function (srcFilePath) {\r\n        for (var directory in directoryMap) {\r\n            var publicReg = new RegExp('^' + me.workPlace + '/' + directory + '/', 'ig');\r\n            if (publicReg.test(srcFilePath)) {\r\n                directoryMap[directory][srcFilePath]\r\n                    = me.manifest[srcFilePath];\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n *\r\n * @param ext\r\n * @returns {boolean}\r\n */\r\nfunction isTxt(ext) {\r\n    return ['.js', '.html', '.css', '.json'].indexOf(ext) !== -1;\r\n}\r\n/**\r\n * 替换每个转换过hash的文件引用内容\r\n * @param fileArray\r\n * @param mapInfo\r\n */\r\nfunction replaceContent(fileArray) {\r\n    var me = this;\r\n    Object.keys(directoryMap).forEach(function (directory) {\r\n        // 执行文件内容替换\r\n        var publicReg = new RegExp('^' + me.workPlace + '/' + directory);\r\n\r\n        fileArray.forEach(function (file) {\r\n            if (publicReg.test(file.sourcePath)) {\r\n                if (isTxt(path.extname(file.sourcePath))) {\r\n                    var fileContents = file.buffer.toString();\r\n                    // 判断文件夹是否带是portal/、admin/、login/、center/、开头\r\n                    Object.keys(directoryMap[directory]).forEach(function (manifestKey) {\r\n\r\n                        var ext = path.extname(manifestKey),\r\n                            someHow = manifestKey\r\n                                .replace(me.workPlace + '/' + directory + '/js/', '')\r\n                                .replace(me.workPlace + '/' + directory + '/', ''),\r\n                            fileReg = new RegExp('(.*)\\\\' + ext + '$');\r\n\r\n                        var theKey = someHow.replace(fileReg, '$1'),\r\n                            joinKey = directoryMap[directory][manifestKey]\r\n                                .replace(fileReg, '$1')\r\n                                .replace(me.workPlace + '/' + directory + '/js/', '')\r\n                                .replace(me.workPlace + '/' + directory + '/', '');\r\n\r\n                        if (fileContents.indexOf(theKey) !== -1 &&\r\n                            manifestKey\r\n                                .replace(new RegExp('^' + me.workPlace + '/'), '')\r\n                                .indexOf(directory + '/index') === -1) {\r\n\r\n                            var findOut = _.find(hashChangeFiles, function (toto) {\r\n                                return toto.sourcePath === file.sourcePath;\r\n                            });\r\n\r\n                            if (!findOut) {\r\n                                hashChangeFiles.push({\r\n                                    sourcePath: file.sourcePath,\r\n                                    hashPath: file.hashPath\r\n                                });\r\n                            }\r\n\r\n                            fileContents = fileContents.split(theKey)\r\n                                .join(joinKey);\r\n                        }\r\n                    });\r\n                    fs.writeFileSync(file.hashPath, fileContents, {encoding: 'UTF-8'});\r\n                }\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction getSubDirectory(workPlace) {\r\n    return fs.readdirSync(workPlace);\r\n}\r\n\r\nmodule.exports = {\r\n    doRevReplace: function (options) {\r\n        var tempFileList = readFile(`${env.buildPath}`);\r\n\r\n        tempFileList.forEach(function (file) {\r\n            fileSystem.copyFileSync(file.sourcePath,\r\n                file.sourcePath.replace(/^build\\//, options.workPlace + '/'));\r\n        });\r\n\r\n        fileList = readFile(options.workPlace);\r\n\r\n        rev_replace(fileList, options.workPlace || `${env.deployPath}`);\r\n\r\n        doLastThings(options.workPlace);\r\n    },\r\n    doRenameIndex: function (options) {\r\n        gulp.src(options.workPlace + '')\r\n    }\r\n}\r\n"]}